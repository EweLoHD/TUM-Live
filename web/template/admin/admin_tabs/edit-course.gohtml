{{define "edit-course"}}
    <link rel="stylesheet" href="/static/node_modules/flatpickr/dist/flatpickr.min.css">
    <script src="/static/node_modules/chart.js/dist/chart.min.js"></script>
    {{- /*gotype: TUM-Live/web.AdminPageData*/ -}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    <div class="text-1 mt-4" x-data="{userId: {{.IndexData.TUMLiveContext.User.Model.ID}} }">
        <div class="min-w-screen flex items-center justify-center">
            <div class="w-full lg:w-5/6">
                <h1 class="mb-4">{{$course.Name}}</h1>
                <label class="hidden" for="courseID">CourseID<input id="courseID" type="text" class="hidden"
                                                                    value="{{$course.Model.ID}}"></label>
                <form class="p-4" method="post">
                    {{template "course_settings" $course}}
                    <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2">
                        <input name="submit" class="btn border-0" type="submit" value="Save Settings">
                        {{if $course.TUMOnlineIdentifier}}
                            <input name="submit" class="btn border-0" type="submit"
                                   value="Reload Enrollments">
                            <input name="submit" class="btn border-0" type="submit"
                                   value="Reload Lectures From TUMOnline">
                        {{end}}
                        <a class="btn border-0 font-semibold" href="{{$course.ID}}/stats">Statistics</a>
                    </div>
                </form>

                {{template "course-admin-management" $course}}
                {{template "camera-presets"}}

                <div x-data="{ filterPast: false, selectedLectures: [], selectedLectureHallId: 0,
                               sortAsc: $persist(false).as('courseStreamsSortOrder') }"
                     class="mt-8">
                    {{$user := .IndexData.TUMLiveContext.User}}
                    {{$ingestBase := .IngestBase}}
                    {{$lectureHalls := .LectureHalls}}
                    <div class="flex justify-between h-14 border-b dark:border-secondary mb-2">
                        <h2 class="my-auto font-bold">Lectures</h2>
                        <button class="border bg-white border-gray-300 rounded w-20 my-auto shadow-sm text-gray-600
                                       hover:border-black hover:text-black
                                       dark:bg-gray-700 dark:border-gray-800 dark:text-gray-200 dark:hover:border-gray-100
                                       dark:hover:text-white"
                                @click="sortAsc = !sortAsc;">
                            <span class="text-sm font-semibold uppercase m-auto"
                                  x-text="sortAsc ? '&#x25B2; asc' : '&#x25BC; desc'">&#x25BC; desc</span>
                        </button>
                    </div>
                    <div class="flex justify-between mt-2 mb-2">
                        <div class="flex">
                            <button @click="admin.deleteLectures({{$course.Model.ID}}, selectedLectures.map(({id}) => id))"
                                    :disabled="selectedLectures.length == 0" class="btn">
                                Delete
                                <b x-text="selectedLectures.length.toString()"></b>
                                <span x-text="selectedLectures.length == 1 ? 'Lecture' : 'Lectures'"></span>
                            </button>

                            {{if eq $user.Role 1}}
                                <div class="flex items-center">
                                    <label class="mx-2">
                                        <select class="text-gray-300 dark:bg-secondary bg-gray-100 p-2"
                                                id="lectureHallBulkSelect"
                                                x-model="selectedLectureHallId"
                                                :disabled="selectedLectures.length == 0 || selectedLectures.some(({isPast}) => isPast)">
                                            <option class="text-gray-300" value="0">Self streaming
                                            </option>
                                            {{range $lectureHall := $lectureHalls}}
                                                <option value="{{$lectureHall.Model.ID}}" class="text-gray-300">
                                                    {{$lectureHall.Name}}
                                                </option>
                                            {{end}}
                                        </select>
                                    </label>
                                    <button
                                            x-show="selectedLectures.length > 0 && !selectedLectures.some(({isPast}) => isPast)"
                                            @click="admin.saveLectureHall(selectedLectures.map(({id}) => id), selectedLectureHallId).then(() => { window.location.reload(); })"
                                    >
                                        <i class="align-middle fas fa-check text-gray-300"></i>
                                    </button>
                                </div>
                            {{end}}
                        </div>
                        <div>
                            <label class="inline-flex items-center">
                                <input class="w-auto form-checkbox" type="checkbox" x-model="filterPast">
                                <span class="ml-2">Filter past lectures</span>
                            </label>
                        </div>
                    </div>
                    <ul class="rounded">
                        {{if not $course.Streams}}
                            <p class="text-3 p-4">It might take a minute to load your lectures from TUMOnline</p>
                        {{end}}
                        <div
                                class="flex"
                                :class="sortAsc ? 'flex-col' : 'flex-col-reverse'"
                                x-data="{
                                    lectures: []
                                }"
                                x-on:newlectures.window="e => (lectures = e.detail)"
                                x-init="$nextTick(() => admin.LectureList.init([
                                    {{range $course.Streams }}
                                        new admin.Lecture(JSON.parse(admin.decodeHtml('{{.GetJson}}')),'{{$course.Slug}}'),
                                    {{end}}
                                ]))"
                        >
                            <template x-for="lecture in lectures" :key="lecture.lectureId">
                                    <li :id="$id('lecture-li')"
                                        x-show="!filterPast || !lecture.isPast"
                                        :key="lecture.lectureId"
                                        class="w-full mb-4 pb-4 relative dark:bg-secondary bg-gray-100">
                                        <div class="border-t-4 flex justify-between mb-2" :class="'border-' + lecture.color">
                                            <div class="pt-2 px-2">
                                                <div class="text-3 font-semibold">
                                                    <input @change="$event.target.checked ? selectedLectures.push({ id: lecture.lectureId, isPast: lecture.isPast }) : (selectedLectures = selectedLectures.filter(({id}) => id != lecture.lectureId))"
                                                           class="w-auto mr-2" type="checkbox"/>
                                                    <span x-text="lecture.startDateFormatted()"></span>
                                                </div>
                                                <div class="text-3 font-sans ml-6">
                                                    <span x-text="lecture.startTimeFormatted()"></span>
                                                     -
                                                    <span x-text="lecture.endTimeFormatted()"></span>
                                                </div>

                                                <div x-show="lecture.uiEditMode == 0" class="text-2 font-sans ml-6 mt-2 pl-3 border-l-4 border-gray-500 dark:border-white">
                                                    <span class="italic text-gray-400 dark:text-gray-600" x-show="lecture.name.length === 0">Unknown Name</span>
                                                    <span class="text-gray-700 dark:text-white" x-show="lecture.name.length > 0" x-text="lecture.name"></span>
                                                </div>
                                            </div>

                                            <div class="flex items-center justify-end h-8">
                                                <template x-if="lecture.isRecording">
                                                    <div>
                                                        <template x-if="lecture.vodViews > 0">
                                                            <p x-text="lecture.vodViews + ' VoD views'" class="text-4 text-sm"></p>
                                                        </template>
                                                        <div class="font-semibold bg-success border-success w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                                                            VoD
                                                        </div>
                                                    </div>
                                                </template>
                                                <template x-if="lecture.isLiveNow">
                                                    <div class="font-semibold bg-danger border-danger w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                                                        Live
                                                    </div>
                                                </template>
                                                <template x-if="!lecture.isRecording && lecture.isPast">
                                                    <div class="font-semibold bg-warn border-warn w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                                                        Past
                                                    </div>
                                                </template>
                                                <template x-if="!lecture.isPast && !lecture.isLiveNow && !lecture.isRecording">
                                                    <div class="font-semibold bg-info border-info w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                                                        Scheduled
                                                    </div>
                                                </template>

                                                <div
                                                    x-data="{
                                                        moreDropdownOpen: false,
                                                        toggleMoreDropdown() {
                                                            if (this.moreDropdownOpen) {
                                                                return this.closeMoreDropdown();
                                                            }
                                                            this.$refs.button.focus();
                                                            this.moreDropdownOpen = true;
                                                        },
                                                        closeMoreDropdown(focusAfter) {
                                                            if (! this.moreDropdownOpen) return;
                                                            this.moreDropdownOpen = false;
                                                            focusAfter && focusAfter.focus();
                                                        }
                                                    }"
                                                    x-on:keydown.escape.prevent.stop="closeMoreDropdown($refs.button)"
                                                    x-on:focusin.window="! $refs.panel.contains($event.target) && closeMoreDropdown()"
                                                    x-id="['dropdown-button']"
                                                    class="relative"
                                                >

                                                    <!-- Button -->
                                                    <button
                                                            x-ref="button"
                                                            x-on:click="toggleMoreDropdown()"
                                                            :aria-expanded="moreDropdownOpen"
                                                            :aria-controls="$id('more-dropdown-button')"
                                                            type="button"
                                                            class="px-5 py-1 text-sm"
                                                    >
                                                        <i class="fas fa-chevron-down"></i>
                                                    </button>

                                                    <!-- Series Options -->
                                                    <div
                                                            x-ref="panel"
                                                            x-show="moreDropdownOpen"
                                                            x-transition.origin.top.right
                                                            x-on:click.outside="closeMoreDropdown($refs.button)"
                                                            :id="$id('more-dropdown-button')"
                                                            style="display: none;"
                                                            class="absolute left-0 mt-2 w-36 bg-white border border-black rounded shadow-md overflow-hidden"
                                                    >
                                                        <div>
                                                            <button @click="lecture.startSingleEdit(); closeMoreDropdown();" class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300" >
                                                                Edit Lecture
                                                            </button>
                                                            <button @click="lecture.deleteLecture(); closeMoreDropdown();" class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300" >
                                                                Delete Lecture
                                                            </button>
                                                        </div>
                                                        <template x-if="lecture.seriesIdentifier.length > 0">
                                                            <div class="border-t border-black">
                                                                <button @click="lecture.startSeriesEdit(); closeMoreDropdown();" class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300" >
                                                                    Edit Series
                                                                </button>
                                                                <button @click="lecture.deleteLectureSeries(); closeMoreDropdown();" class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300" >
                                                                    Delete Series
                                                                </button>
                                                            </div>
                                                        </template>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div x-show="lecture.uiEditMode > 0" class="px-4 pt-4 mt-4 border-t-2 border-gray-100/20">
                                            <div x-data="{ id: $id('text-input') }" class="w-full flex flex-row border-b-2 focus-within:border-gray-300 border-gray-500">
                                                <label :for="id" class="hidden">Lecture title</label>
                                                <input :id="id"
                                                       class="grow border-none" type="text"
                                                       x-model="lecture.newName"
                                                       x-on:keyup="lecture.updateIsDirty()"
                                                       placeholder="Lecture 2: Dark-Patterns I"
                                                       autocomplete="off">
                                            </div>
                                            <div class="w-full mt-3">
                                                <div x-data="{ id: $id('text-input') }" class="w-full flex flex-row border-b-2 focus-within:border-gray-300 border-gray-500">
                                                    <label :for="id" class="hidden">Lecture description</label>
                                                    <textarea :id="id"
                                                              class="grow border-none"
                                                              placeholder="Add a nice description, links, and more. You can use Markdown."
                                                              autocomplete="off"
                                                              x-model="lecture.newDescription"
                                                              x-on:keyup="lecture.updateIsDirty()"
                                                    ></textarea>
                                                </div>


                                                <template x-if="!lecture.isPast && !lecture.isRecording">
                                                    <div class="p-3 rounded border-gray-100 border-2 mt-3">
                                                        {{if eq $user.Role 1}}
                                                            <div x-data="{ id: $id('select') }">
                                                                <label class="mx-2">
                                                                    <span>Select Lecture Hall</span>
                                                                    <select class="text-gray-700 dark:text-gray-300 dark:bg-secondary bg-gray-100 p-2"
                                                                            :id="id"
                                                                            x-on:change="lecture.updateIsDirty()"
                                                                            x-model="lecture.newLectureHallId">
                                                                        <option class="text-gray-700 dark:text-gray-300" value="0">
                                                                            Self streaming
                                                                        </option>
                                                                        {{range $lectureHall := $lectureHalls}}
                                                                            <option class="text-gray-700 dark:text-gray-300" value="{{$lectureHall.Model.ID}}" :selected="lecture.lectureHallId === '{{$lectureHall.Model.ID}}'">
                                                                                {{$lectureHall.Name}}
                                                                            </option>
                                                                        {{end}}
                                                                    </select>
                                                                </label>
                                                            </div>
                                                        {{end}}

                                                        <p x-show="lecture.newLectureHallId != '0'" class="mt-1 ml-2">
                                                            <span class="font-semibold">Stream Server:</span>
                                                            <span x-text="'{{$ingestBase}}stream?secret=' + lecture.streamKey"></span>
                                                            <i class="fas fa-clipboard hover:text-purple-500"
                                                               @click="() => admin.copyToClipboard('{{$ingestBase}}stream?secret=' + lecture.streamKey)"></i>
                                                            <br>
                                                            <span class="font-semibold">Stream Key:</span>
                                                            <span x-text="lecture.courseSlug + '-' + lecture.lectureId"></span><br>
                                                            {{if ne $user.Role 1}}
                                                                <span>Want to stream from a lecture hall instead? Please reach out to the RBG.</span>
                                                            {{end}}
                                                        </p>
                                                        {{if eq $user.Role 2}}
                                                            <div x-show="lecture.newLectureHallId == '0'">
                                                                This lecture will be streamed from <span
                                                                        class="font-semibold text-white">{{range $lectureHall := $lectureHalls}}<span x-show="lecture.lectureHallId === '{{$lectureHall.Model.ID}}'">{{$lectureHall.Name}}</span>{{end}}</span>.
                                                                If you need this changed or want to stream from home (with obs, zoom etc.), please reach out to the RBG.
                                                            </div>
                                                        {{end}}
                                                    </div>
                                                </template>

                                            </div>

                                            <template x-if="lecture.isRecording">
                                                <span class="absolute left-0 bottom-0 p-4">
                                                    <template x-if="lecture.files.length > 0">
                                                        <span class="relative mr-2" x-data="{expand:false}">
                                                            <button @click="expand=!expand" type="button"
                                                                    id="menu-button" aria-expanded="true" aria-haspopup="true">
                                                                <i class="fas fa-cloud-download-alt text-4 text-lg hover:text-1"></i>
                                                            </button>
                                                            <span x-cloak x-show="expand" @click.outside="expand = false"
                                                                  class="origin-top-left absolute top-full left-0 m-auto w-32
                                                                 dark:bg-secondary ring-1 ring-black ring-opacity-5 focus:outline-none"
                                                                  role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                                                                <span class="py-1" role="none">
                                                                    <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" -->
                                                                    <template x-for="file in lecture.files" :key="file.id">
                                                                        <a :href="'/api/download/' + file.id" download
                                                                           class="hover:bg-gray-100 text-3 dark:hover:bg-gray-600
                                                                           block px-4 py-2 text-sm first:rounded-t-md last:rounded-b-md"
                                                                           x-text="file.friendlyName" role="menuitem" tabindex="-1" id="menu-item-0"></a>
                                                                    </template>
                                                                </span>
                                                            </span>
                                                        </span>
                                                    </template>
                                                    <template x-if="lecture.hasStats">
                                                        <a>
                                                            <i class="fas fa-chart-line text-4 text-lg hover:text-1"
                                                               title="Live Statistics"
                                                               @click="admin.showStats(lecture.lectureId)"></i>
                                                        </a>
                                                    </template>
                                                </span>
                                            </template>

                                            <div x-show="lecture.lastErrors.length > 0" class="px-6 py-3 bg-red-400 my-3 rounded">
                                                <ul>
                                                    <template x-for="error in lecture.lastErrors">
                                                        <li x-text="error"></li>
                                                    </template>
                                                </ul>
                                            </div>

                                            <div class="mt-6 flex justify-end">
                                                <button :disabled="lecture.isSaving" @click="lecture.discardEdit();" class="px-8 py-3 text-2 text-white rounded bg-indigo-500/70 hover:bg-indigo-500/90 dark:bg-indigo-500/10 disabled:opacity-20 dark:hover:bg-indigo-500/20 mr-4" >
                                                    Discard Changes
                                                </button>
                                                <button
                                                        @click="lecture.saveEdit();"
                                                        :disabled="!lecture.isDirty || lecture.isSaving"
                                                        class="px-8 py-3 text-2 rounded text-white bg-indigo-500 hover:bg-indigo-600 disabled:opacity-20 disabled:hover:bg-indigo-500"
                                                        x-text="lecture.isSaving ? 'loading ...' : (lecture.uiEditMode === admin.UIEditMode.single ? 'Save Lecture' : 'Save Series')"
                                                ></button>
                                            </div>
                                        </div>
                                    </li>
                            </template>
                            <li class="w-full p-6 dark:hover:bg-primary hover:bg-white border-b-2 border-primary">
                                <form method="post" action="/api/createLecture"
                                      x-data="admin.createLectureForm()"
                                      @submit.prevent="submitData"
                                      x-init="courseID = {{$course.Model.ID}}">
                                    <div class="flex">
                                        <div class="w-1/4">
                                            <div class="text-1 font-semibold">Create Lecture</div>
                                            <label>
                                                <input type="checkbox" x-model="formData.premiere" @change="(v) => v && (formData.recurring = false)" class="w-auto">
                                                <span class="text-3">Video Premiere</span>
                                            </label><br>
                                            <label>
                                                <input type="checkbox" x-model="formData.vodup" @change="(v) => v && (formData.recurring = false)" class="w-auto">
                                                <span class="text-3">VoD Upload</span>
                                            </label><br>
                                            <label>
                                                <input type="checkbox" :disabled="formData.premiere || formData.vodup" x-model="formData.recurring" class="w-auto">
                                                <span class="text-3">Recurring Event</span>
                                            </label>
                                        </div>
                                        <div class="w-3/4">
                                            <div class="dark:hover:bg-primary hover:bg-white">
                                                <div class="flex flex-col md:flex-row">
                                                    <label for="name" class="md:w-1/2 w-full" x-show="!loading">
                                                        <span class="font-semibold p-2">Lecture Name</span>
                                                        <input name="name" id="name" type="text" x-model="formData.title"
                                                               placeholder="L01: Binary Trees"/>
                                                    </label>
                                                    <label for="start" class="md:w-1/4 w-full" x-show="!loading">
                                                        <span class="font-semibold p-2">Start</span>
                                                        <input name="start" type="text" placeholder="2021-04-08 14:00"
                                                               id="start" x-model="formData.start" x-ref="start"
                                                               @change="() => setTimeout(() => { regenerateRecurringDates(); recalculateDuration(); }, 100)"
                                                               x-init="flatpickr($refs.start, {enableTime: true, time_24hr: true, altInput:true, altFormat:'Y-m-d H:i', dateFormat:'Z'})"/>
                                                    </label>
                                                    <label x-show="!formData.premiere && !formData.vodup && !loading"
                                                           for="end" class="md:w-1/4 w-full">
                                                        <span class="font-semibold p-2">End</span>
                                                        <span x-show="formData.formatedDuration != ''" class="text-sm font-light opacity-75">
                                                            ( <span x-text="formData.formatedDuration"></span> )
                                                        </span>
                                                        <input name="end" type="text" placeholder="16:00" id="end"
                                                               x-model="formData.end"
                                                               @change="() => setTimeout(() => recalculateDuration(), 100)"
                                                               x-ref="end"
                                                               x-init="flatpickr($refs.end, {enableTime: true, noCalendar: true, dateFormat: 'H:i', time_24hr: true })"/>
                                                    </label>
                                                    <label class="relative"
                                                           x-show="formData.premiere || formData.vodup && !loading"
                                                           x-data="{ showTooltip:false }">
                                                        <span class="font-semibold p-2">Video File <i
                                                                    class="text-warn fas fa-exclamation-triangle"
                                                                    @mouseover="showTooltip=true"
                                                                    @mouseleave="showTooltip=false">
                                                                <span class="absolute left-0 top-0 text-gray-700 transform -translate-y-6 bg-white rounded p-1 shadow font-light"
                                                                      x-show="showTooltip">If possible: mp4, H.264, 1080p @ 30fps</span>
                                                            </i></span>
                                                        <input type="file" accept="video/mp4"
                                                               x-on:change="formData.file = Object.values($event.target.files)">
                                                    </label>

                                                </div>
                                            </div>
                                            <div class="mt-4">
                                                <div class="flex items-center">
                                                    <label class="mx-2"
                                                           x-show="!formData.premiere && !formData.vodup && !loading">
                                                        <span class="font-semibold p-2">Lecture Hall:</span>
                                                        <select class="text-gray-300 dark:bg-secondary bg-gray-100 p-2"
                                                                id="lectureHallBulkSelect"
                                                                x-model="formData.lectureHallId">
                                                            <option class="text-gray-300" value="0">Self streaming
                                                            </option>
                                                            {{range $lectureHall := $lectureHalls}}
                                                                <option value="{{$lectureHall.Model.ID}}"
                                                                        class="text-gray-300">
                                                                    {{$lectureHall.Name}}
                                                                </option>
                                                            {{end}}
                                                        </select>
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="mt-4">
                                                <div class="flex" x-show="formData.recurring && !loading">
                                                        <div class="w-1/4 pl-2">
                                                            <span class="font-semibold mb-6">Interval</span><br>
                                                            <label>
                                                                <input type="radio" value="daily" x-model="formData.recurringInterval" class="w-auto" @change="regenerateRecurringDates">
                                                                <span class="text-3">Repeat Daily</span>
                                                            </label><br>
                                                            <label>
                                                                <input type="radio" value="weekly" x-model="formData.recurringInterval" class="w-auto" @change="regenerateRecurringDates">
                                                                <span class="text-3">Repeat Weekly</span>
                                                            </label><br>
                                                            <label>
                                                                <input type="radio" value="monthly" x-model="formData.recurringInterval" class="w-auto" @change="regenerateRecurringDates">
                                                                <span class="text-3">Repeat Monthly</span>
                                                            </label><br>
                                                        </div>
                                                        <div class="w-1/4 pl-2">
                                                            <label for="events-count" class="w-full">
                                                                <span class="font-semibold p-2">Count</span>
                                                                <input name="events-count" type="number" placeholder="14" id="end" min="1" x-model="formData.eventsCount" @change="regenerateRecurringDates" @keyup="regenerateRecurringDates"/>
                                                            </label>
                                                        </div>
                                                        <div class="w-1/2 pl-2">
                                                            <span class="font-semibold mb-6">Dates</span><br>
                                                            <span x-show="formData.start == ''" class="ml-2 opacity-75">- Please set "start" first -</span>
                                                            <ul class="ml-2" x-show="formData.start != ''">
                                                                <li
                                                                    x-bind:style="{ 'cursor': 'default' }"
                                                                >
                                                                    <i class="far fa-check-square"></i>
                                                                    <span x-text="(new Date(formData.start)).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })"></span>
                                                                </li>
                                                                <template x-for="date in formData.recurringDates">
                                                                    <li
                                                                        x-bind:style="{ 'cursor': 'pointer', 'opacity': date.enabled ? '1' : '0.3' }"
                                                                        @click="() => (date.enabled = !date.enabled)"
                                                                    >
                                                                        <i x-show="date.enabled" class="far fa-check-square"></i>
                                                                        <i x-show="!date.enabled" class="far fa-square"></i>
                                                                        <span x-text="date.date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })"></span>
                                                                    </li>
                                                                </template>
                                                            </ul>
                                                        </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-8">
                                        <button class="btn" type="submit" id="createLectureBtn">
                                            <span x-show="!loading">
                                                <i class="fas fa-check"></i>
                                                <span
                                                        x-text="formData.recurring && formData.recurringDates.filter(({enabled}) => enabled).length > 0
                                                            ? `Create ${(formData.recurringDates.filter(({enabled}) => enabled).length + 1).toString()} Lectures`
                                                            : 'Create Lecture'"
                                                ></span>
                                            </span>
                                            <i class="fas fa-circle-notch text-4 animate-spin" x-show="loading"></i>
                                        </button>
                                        <span class="text-danger" x-show="error">Something went wrong.</span>
                                    </div>
                                </form>
                            </li>
                        </div>
                    </ul>
                    {{template "externalParticipants" $course}}
                </div>
                <div class="mt-7 mb-5">
                    <div class="flex h-14 border-b dark:border-secondary mb-2">
                        <h2 class="text-red-400 dark:text-red-500 font-bold my-auto">
                            <i class="fas fa-exclamation-triangle mr-2"></i>
                            Dangerzone
                        </h2>
                    </div>
                    <button class="btn bg-red-400 hover:bg-red-500 dark:bg-red-500 dark:hover:bg-red-600 border-0 rounded"
                            @click="admin.deleteCourse('{{$course.Model.ID}}')">
                        <span class="font-semibold text-white"><i class="far fa-trash-alt mr-2"></i>Delete course and all associated lectures</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
{{end}}